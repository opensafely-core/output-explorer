---
name: CI

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.9"
      - name: "Install dependencies"
        run: |
          set -xe
          python -m pip install --upgrade pip
          python -m venv venv
          venv/bin/pip install --progress-bar=off --require-hashes --requirement requirements.txt
          venv/bin/pip install --progress-bar=off --require-hashes --requirement requirements.dev.txt
      - name: Cache the venv
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/venv
          key: venv-${{ github.ref }}-${{ hashFiles('requirements.txt', 'requirements.dev.txt') }}

  format:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: extractions/setup-just@v1
      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.9"
      - name: Use the cached venv
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/venv
          key: venv-${{ github.ref }}-${{ hashFiles('requirements.txt', 'requirements.dev.txt') }}
      - run: ls -lah ${{ github.workspace }}
      - name: Check formatting
        run: |
          source ${{ github.workspace }}/venv/bin/activate
          just format
  lint:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: extractions/setup-just@v1
      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.9"
      - name: Use the cached venv
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/venv
          key: venv-${{ github.ref }}-${{ hashFiles('requirements.txt', 'requirements.dev.txt') }}
      - name: Check linting
        run: |
          source ${{ github.workspace }}/venv/bin/activate
          just lint
  sort:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: extractions/setup-just@v1
      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.9"
      - name: Use the cached venv
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/venv
          key: venv-${{ github.ref }}-${{ hashFiles('requirements.txt', 'requirements.dev.txt') }}
      - name: Check import sorting
        run: |
          source ${{ github.workspace }}/venv/bin/activate
          just sort
  test:
    needs: [format, lint, sort]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: extractions/setup-just@v1
      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.9"
      - name: Use the cached venv
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/venv
          key: venv-${{ github.ref }}-${{ hashFiles('requirements.txt', 'requirements.dev.txt') }}
      - name: Check requirements
        run: |
          source ${{ github.workspace }}/venv/bin/activate
          pip list
      - name: Run tests
        env:
          SECRET_KEY: 12345
          REQUESTS_CACHE_NAME: test_cache
          SOCIAL_AUTH_NHSID_KEY: dummy-client-id
          SOCIAL_AUTH_NHSID_SECRET: dummy-secret
          SOCIAL_AUTH_NHSID_API_URL: https://dummy-nhs.net/oidc
        run: |
          source ${{ github.workspace }}/venv/bin/activate
          just test

  lint-dockerfile:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: hadolint/hadolint-action@v1.4.0

  deploy:
    needs: [test, lint-dockerfile]
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/deploy_test'

    concurrency: deploy-production

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Deploy to dokku
        uses: idoberko2/dokku-deploy-github-action@4b326b36625e4a10add5f9601e8ffbaf048444b9
        with:
          app-name: "output-explorer"
          dokku-host: "dokku2.ebmdatalab.net"
          ssh-private-key: ${{ secrets.DOKKU2_DEPLOY_SSH_KEY }}
          remote-branch: "main"
